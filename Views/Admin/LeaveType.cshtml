@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Manage Leave Types";
}

<div class="container mt-4">
    <h2 class="text-center mb-4">Manage Leave Types</h2>

    <div id="alert-placeholder"></div>

    <!-- Add / Update Leave Type Form -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title">Add / Update Leave Type</h5>
            <form id="leaveTypeForm">
                <input type="hidden" id="leaveTypeId" />
                <div class="row g-3">
                    <div class="col-md-6">
                        <input type="text" id="leaveTypeName" class="form-control" placeholder="Leave Type Name" required>
                    </div>
                    <div class="col-md-4">
                        <input type="number" id="maxLeavesPerYear" class="form-control" placeholder="Max Leaves / Year" min="1" required>
                    </div>
                    <div class="col-md-2 d-grid">
                        <button type="submit" class="btn btn-primary" id="saveBtn">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Leave Types Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <table class="table table-striped table-bordered" id="leaveTypesTable">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Leave Type</th>
                        <th>Max Leaves / Year</th>
                        <th>Created At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="leaveTypesBody">
                    <tr>
                        <td colspan="5" class="text-center">Loading...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const token = localStorage.getItem("token");
        const alertPlaceholder = document.getElementById("alert-placeholder");
        const leaveTypeForm = document.getElementById("leaveTypeForm");
        const leaveTypeIdInput = document.getElementById("leaveTypeId");
        const leaveTypeNameInput = document.getElementById("leaveTypeName");
        const maxLeavesInput = document.getElementById("maxLeavesPerYear");
        const saveBtn = document.getElementById("saveBtn");
        const leaveTypesBody = document.getElementById("leaveTypesBody");
        const apiBase = "/api/LeaveType";

        document.addEventListener("DOMContentLoaded", loadLeaveTypes);

        // Load all leave types
        async function loadLeaveTypes() {
            try {
                const res = await fetch(`${apiBase}/GetAll`, {
                    headers: { "Authorization": `Bearer ${token}` }
                });
                const data = await res.json();
                if (res.ok) {
                    renderTable(data.data);
                } else {
                    showAlert("danger", data.message || "Failed to load leave types");
                }
            } catch (err) {
                console.error(err);
                showAlert("danger", "Error loading leave types");
            }
        }

        function renderTable(leaveTypes) {
            if (!leaveTypes || leaveTypes.length === 0) {
                leaveTypesBody.innerHTML = `<tr><td colspan="5" class="text-center text-muted">No leave types found.</td></tr>`;
                return;
            }

            leaveTypesBody.innerHTML = leaveTypes.map(lt => `
                <tr>
                    <td>${lt.leaveTypeId}</td>
                    <td>${lt.leaveTypeName}</td>
                    <td>${lt.maxLeavesPerYear}</td>
                    <td>${new Date(lt.createdAt).toLocaleString()}</td>
                    <td>
                        <button class="btn btn-sm btn-info me-1" onclick="editLeaveType(${lt.leaveTypeId}, '${lt.leaveTypeName}', ${lt.maxLeavesPerYear})">Edit</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteLeaveType(${lt.leaveTypeId})">Delete</button>
                    </td>
                </tr>
            `).join('');
        }

        // Show alert
        function showAlert(type, message) {
            const html = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
                            ${message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                          </div>`;
            alertPlaceholder.innerHTML = html;
        }

        // Submit form: Add or Update
        leaveTypeForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            const leaveTypeId = leaveTypeIdInput.value;
            const payload = {
                LeaveTypeName: leaveTypeNameInput.value.trim(),
                MaxLeavesPerYear: parseInt(maxLeavesInput.value)
            };

            if (!payload.LeaveTypeName || payload.MaxLeavesPerYear <= 0) {
                showAlert("danger", "Please provide valid leave type details.");
                return;
            }

            try {
                let url = leaveTypeId ? `${apiBase}/${leaveTypeId}` : `${apiBase}/Create`;
                let method = leaveTypeId ? "PATCH" : "POST";

                const res = await fetch(url, {
                    method,
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${token}`
                    },
                    body: JSON.stringify(payload)
                });

                const data = await res.json();

                if (res.ok) {
                    showAlert("success", data.message);
                    leaveTypeForm.reset();
                    leaveTypeIdInput.value = "";
                    saveBtn.textContent = "Save";
                    loadLeaveTypes();
                } else {
                    showAlert("danger", data.message || "Failed to save leave type");
                }
            } catch (err) {
                console.error(err);
                showAlert("danger", "Error saving leave type");
            }
        });

        // Edit leave type
        function editLeaveType(id, name, maxLeaves) {
            leaveTypeIdInput.value = id;
            leaveTypeNameInput.value = name;
            maxLeavesInput.value = maxLeaves;
            saveBtn.textContent = "Update";
        }

        // Delete leave type
        async function deleteLeaveType(id) {
            if (!confirm("Are you sure you want to delete this leave type?")) return;

            try {
                const res = await fetch(`${apiBase}/${id}`, {
                    method: "DELETE",
                    headers: { "Authorization": `Bearer ${token}` }
                });
                const data = await res.json();

                if (res.ok) {
                    showAlert("success", data.message);
                    loadLeaveTypes();
                } else {
                    showAlert("danger", data.message || "Failed to delete leave type");
                }
            } catch (err) {
                console.error(err);
                showAlert("danger", "Error deleting leave type");
            }
        }
    </script>
}
